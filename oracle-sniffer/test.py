# data = b'\x01\x1a\x00\x00\x06\x00\x00\x00\x00\x00\x11i\x9a\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x03^\x9b!\x01\x04\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff2\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19CALL DBMS_OUTPUT.ENABLE()\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

# \x00d \x04b \x05c  \x01 \00

# import re
#
# ss = b'\x05c\x00\x1d\x00\x03\x04\x9e\x02\x17 select * from all_users \x01\x01\x00\x01'
# ss2 = b'\x01\x18\x00\x00\x06\x00\x00\x00\x00\x00\x11i`\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x03\x00\x00\x00\x03^aa\x81\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff.\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17 select * from all_users\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
#
# # print(ss.decode('utf-8', errors='ignore'))
# result = re.sub(rb'[\x00-\x1F]', b'', ss2)
#
# print(result)
# ss = ss.decode('utf-8', errors='ignore')
# pattern = re.compile(b'\\x[0-9A-Fa-f]{2,3}')
# pattern = re.compile(b'\\\x[a-zA-Z].*]')
# data = re.findall(rb'\x17(.*)', ss)
# data = re.search(rb'[a-zA-Z].*(.*)',  ss, re.S)
# data = re.findall(r'[^0-9A-Fa-f]+', ss)
# print(data.group())
# print([i.decode('utf-8', errors='ignore') for i in datas])

# pattern2 = re.compile(rb'[a-zA-Z].*(.*)', re.S)
# pattern3 = re.compile(rb'[\x00-\x1F]+(.*)')
# # re.compile(rb'[\x00-\x1F]+(.*)')
#
# # 使用re.findall来找到匹配项
# datas = re.search(pattern, data)
# print(datas)


# pattern = rb'\\x[0-9A-Fa-f]{2}'


"""

import re
byte_string = b'This is a byte string with numbers: 12345'

# 使用正则表达式匹配数字
pattern = b'\d+'
matches = re.findall(pattern, byte_string)

# 打印匹配结果
for match in matches:
    print(match)
"""

# import re
#
# # 您的字节串
# byte_string = b'\x01\x1a\x00\x00\x06\x00\x00\x00\x00\x00\x11i\x18\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x03\x00\x00\x00\x03^\x19!\x01\x04\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff2\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19CALL DBMS_OUTPUT.ENABLE()\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
#
# # 使用正则表达式将16进制字符替换为空
# result = re.sub(b'[0-9A-Fa-f]+', b'', byte_string)
#
# # 打印替换后的结果
# print(result)
W = '\033[0m'  # white (normal)

R = '\033[91m'  # red
Y = '\033[93m'  # yellow
B = '\033[94m'  # blue



def color(type, string):
    print(f'{type}{string} \033[0m')


red_text = "\033[91mThis text is red!\033[0m"
color(R, 'hhshh\n111')
color(Y, 'hhshh\n111')
color(B, 'hhshh\n111')

