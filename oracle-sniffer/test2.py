import re

ss1 = b'\x00g\x00\x00\x06\x00\x00\x00\x00\x00\x11i/\x01\x01\x01\x01\x03\x03^0\x02\x80!\x00\x01\x01\x17\x01\x01\r\x00\x00\x04\xff\xff\xff\xff\x01\n\x04\x7f\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x17SELECT * from all_views\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x00\x02\x80\x00\x00\x00\x00'
ss2 = b'\x00\x9f\x00\x00\x06\x00\x00\x00\x00\x00\x11xv\x01\x01\x01\x01\x04\x11iw\x01\x01\x01\x01\x04\x03^x\x02\x05)\x00\x01\x01*\x01\x01\r\x00\x00\x00\x00\x02\x7f\xf8\x01\x01\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00*BEGIN DBMS_OUTPUT.GET_LINE(:1 , :2 ); END;\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x02\x80\x00\x00\x00\x00\x01\x03\x00\x00\x02\xff\xfe\x00\x01\x10\x00\x00\x02\x03T\x01\x00\x02\x03\x00\x00\x01\x16\x00\x00\x00\x00\x02\x03T\x01\x00\x07\x00\x00'
ss3 = b'\x00g\x00\x00\x06\x00\x00\x00\x00\x00\x11i/\x01\x01\x01\x01\x03\x03^0\x02\x80!\x00\x01\x01\x17\x01\x01\r\x00\x00\x04\xff\xff\xff\xff\x01\n\x04\x7f\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x17SELECT * from all_views\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x00\x02\x80\x00\x00\x00\x00'
ss4 = b"\x01\x16\x00\x00\x06\x00\x00\x00\x00\x00\x11i\xe5\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x07\x00\x00\x00\x03^\xe6a\x80\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff*\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x15select 'x' from dual\n\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
ss5 = b'\x00\x9f\x00\x00\x06\x00\x00\x00\x00\x00\x11xH\x01\x01\x01\x01\x04\x11iI\x01\x01\x01\x01\x04\x03^J\x02\x05)\x00\x01\x01*\x01\x01\r\x00\x00\x00\x00\x02\x7f\xf8\x01\x01\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00*BEGIN DBMS_OUTPUT.GET_LINE(:1 , :2 ); END;\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x02\x80\x00\x00\x00\x00\x01\x03\x00\x00\x02\xff\xfe\x00\x01\x10\x00\x00\x02\x03T\x01\x00\x02\x03\x00\x00\x01\x16\x00\x00\x00\x00\x02\x03T\x01\x00\x07\x00\x00'
ss6 = b"\x00\x93\x00\x00\x06\x00\x00\x00\x00\x00\x11xE\x01\x01\x01\x01\x02\x11iF\x01\x01\x01\x01\x02\x03^G\x02\x80!\x00\x01\x01;\x01\x01\r\x00\x00\x04\xff\xff\xff\xff\x01\n\x04\x7f\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00;SELECT SYS_CONTEXT( 'USERENV', 'CURRENT_SCHEMA' ) FROM DUAL\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x00\x02\x80\x00\x00\x00\x00"

tt1 = b'\x00g\x00\x00\x06\x00\x00\x00\x00\x00\x11ip\x01\x01\x01\x01\x03\x03^q\x02\x80!\x00\x01\x01\x17\x01\x01\r\x00\x00\x04\xff\xff\xff\xff\x01\n\x04\x7f\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x17Select * from all_users\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x00\x02\x80\x00\x00\x00\x00'
tt2 = b'\x00\x11\x00\x00\x06\x00\x00\x00\x00\x00\x03\x05r\x01\x02\x01\n'
tt3 = b"\x00\x93\x00\x00\x06\x00\x00\x00\x00\x00\x11xs\x01\x01\x01\x01\x02\x11it\x01\x01\x01\x01\x02\x03^u\x02\x80!\x00\x01\x01;\x01\x01\r\x00\x00\x04\xff\xff\xff\xff\x01\n\x04\x7f\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00;SELECT SYS_CONTEXT( 'USERENV', 'CURRENT_SCHEMA' ) FROM DUAL\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x00\x02\x80\x00\x00\x00\x00"
tt4 = b'\x00\x9f\x00\x00\x06\x00\x00\x00\x00\x00\x11xv\x01\x01\x01\x01\x04\x11iw\x01\x01\x01\x01\x04\x03^x\x02\x05)\x00\x01\x01*\x01\x01\r\x00\x00\x00\x00\x02\x7f\xf8\x01\x01\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00*BEGIN DBMS_OUTPUT.GET_LINE(:1 , :2 ); END;\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x02\x80\x00\x00\x00\x00\x01\x03\x00\x00\x02\xff\xfe\x00\x01\x10\x00\x00\x02\x03T\x01\x00\x02\x03\x00\x00\x01\x16\x00\x00\x00\x00\x02\x03T\x01\x00\x07\x00\x00'

string1 = b'\x01\x1a\x00\x00\x06\x00\x00\x00\x00\x00\x11i\x18\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x03\x00\x00\x00\x03^\x19!\x01\x04\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff2\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19CALL DBMS_OUTPUT.ENABLE()\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
string2 = b'\x01\x18\x00\x00\x06\x00\x00\x00\x00\x00\x11i\x1a\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x03^\x1ba\x81\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff.\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17select * from all_users\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
string3 = b'\x00\x1d\x00\x00\x06\x00\x00\x00\x00\x00\x03\x04\x1c\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
string4 = b'\x00\x15\x00\x00\x06\x00\x00\x00\x00\x00\x03\x05\x1d\x03\x00\x00\x00d\x00\x00\x00'
string5 = b"\x01\xd1\x00\x00\x06\x00\x00\x00\x00\x00\x11i\x1e\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x03\x00\x00\x00\x03^\x1f)\x05\x04\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff&\x01\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x93DECLARE LINE VARCHAR2(32767); BEGIN DBMS_OUTPUT.GET_LINE(LINE, :STATUS); IF (LINE IS NULL) THEN LINE := 'NAVICAT_LINE'; END IF; :LINE := LINE; END;\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\xfe\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0\x07\x02\x00\x00\x00\x00\x01\x01\x00\x00\xfe\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0\x07\x02\x00\x00\x00\x00\x07\x00\x00"
string6 = b'\x01\x1b\x00\x00\x06\x00\x00\x00\x00\x00\x11i \xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x03^!!\x01\x04\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff4\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1aCALL DBMS_OUTPUT.DISABLE()\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'


st1 = b'\x01\x1a\x00\x00\x06\x00\x00\x00\x00\x00\x11i\xc6\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x03\x00\x00\x00\x03^\xc7!\x01\x04\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff2\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19CALL DBMS_OUTPUT.ENABLE()\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
st2 = b'\x01\n\x00\x00\x06\x00\x00\x00\x00\x00\x11i\xc8\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x03^\xc9!\x01\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x12\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\tshow user\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
# st3 = b'\x00\x0b\x00\x00\x0c\x00\x00\x00\x01\x00\x02'

# pattern = re.compile(rb'\x00\x00\x00\x00\x00(.*)\x01\x00\x00\x00')
#
# datas = re.findall(pattern, ss)
# res = [bytes.fromhex(i[3:-1]).decode('utf-8') for i in datas]
# print(res)
# s1 = ss1.decode('utf-8', errors='ignore')
# s2 = ss2.decode('utf-8', errors='ignore')
# s3 = ss3.decode('utf-8', errors='ignore')
# s4 = ss4.decode('utf-8', errors='ignore')
# s5 = ss5.decode('utf-8', errors='ignore')
# s6 = ss6.decode('utf-8', errors='ignore')
#
# datas = [s1, s2, s3, s4, s5, s6]


# for i in datas:
#     print(i, 111)
#     extracted_chars = ''.join([char for char in i if char.isprintable()])
#     print(extracted_chars)
# pattern = rb'\\x\[0-9a-zA-Z\]'
# pattern2 = re.compile(rb'\x00\x00\x00\x00\x00(.*)\x01\x00\x00\x00')
# data = re.findall(pattern2, ss1)
# print(data)


def func(string):
    pattern1 = re.compile(rb'\x01\x00\x00\x00+(.*?)\x01\x00\x00\x00', re.S)
    data = re.search(pattern1, string)
    print(data)
    if data:
        print(data.group(),"-----------")
        pattern2 = re.compile(rb'\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00(.*?)\x01\x00\x00\x00',re.S)
        pattern3 = re.compile(rb'\x01\x00\x00\x00\x00\x00(.*?)\x01\x00\x00\x00', re.S)
        patterns = [pattern2,pattern3]
        for pattern in patterns:
            new_datas = pattern.findall(data.group())
            # print(new_datas)
            for i in new_datas:
                # print(i)
                res = i.decode('utf-8', errors='ignore')
                # print(res)
                extracted_chars = ''.join([char for char in res if char.isprintable()])
                # print(extracted_chars)
                # 去掉开头的特殊字符，re.MULTILINE 表示匹配每一行的开头
                cleaned_text = re.sub(r"^(?:'|%|\*|;)+", "", extracted_chars, flags=re.MULTILINE)
                print(cleaned_text)


# func(st1)
func(st2)
# func(st3)

# func(ss1)
# func(ss2)
# func(ss3)
# func(ss4)
# func(ss5)
# func(ss6)
#
# func(tt1)
# func(tt2)
# func(tt3)
# func(tt4)
#
# func(string1)
# func(string2)
# func(string3)
# func(string4)
# func(string5)
# func(string6)
# func(ss4)
# ss = b"\x03^\xe6a\x80\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff*\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\r\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfe\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x15select 'x' from dual\n"
#
# data = ss.decode(errors='ignore')
# pattern3 = r'[a-zA-Z0-9](.*)'
# # data = re.sub(pattern, b'', ss)
# res = re.search(pattern3, data)
# print(res)
# if res:
#     print(res.group())
# datas = [ss1,
#          ss2,
#          ss3,
#          ss4,
#          ss5,
#          ss6]

# for i in datas:
#     # print(i, 111)
#     func(i)
# if data:
#     data = data[0].decode(errors='ignore')
#     pattern3 = r'[a-zA-Z0-9](.*)[a-zA-Z0-9]'
#     # data = re.sub(pattern, b'', ss)
#     res = re.search(pattern3, data)
#     if res:
#         print(res.group())
